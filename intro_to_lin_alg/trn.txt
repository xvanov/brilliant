#### Qs ####
1 consider system of 2 eqs, what are the possible number of sols and how to know which one it is? 27-58-1-33-29
2 DOF in context of matrices? 27-58-1-33-29
3 How to rref in python? 27-58-1-33-29
4 How to solve system of eqs in python? 27-58-1-33-29 
5 explain gaussian elimination? 27-58-1-33-29
6 what are the fundamental matrix operations?
7 what is ref?
8 what is rref? 
9 what is Kirchoff's law?
10 how to setup matrix to solve circuit with resistors and v source?
11 what is being closed under addition or multiplication?
12 what is a vector space?
13 what is a subspace?
14 what is span?
15 what is intersction, sum and union of vector spaces?

#### As ####
1 
- number of sols = 1, none, infinite
- row multiple of another -> infinite
- variable column multiple of another and sol column not zero -> none

2
- need as many eqs as dofs to have a chance to solve with exact solution (1 sol)
- DOF = # of vars

3
sympy.Matrix([[],...]).rref()

4
numpy.linalg.solve(numpy.array, numpy.array)

5
write eqs in matrix form
eliminate all vars in column except one starting from left to right

6 
reorder rows
multiply row by constant
add rows

7
row echelon form, all 0s below each pivot

8
reduced row echelon form, all 0s above and below each pivot

9
sum of voltages around closed loop is zero

10 
write n equations for n unknows and put in matrix form

11
closed under addition = if u is sol and v is sol, then u+v is also sol
closed under scalar multipication = if u is sol, then so is cu

12
vector space 
- associativity for add and mul: (a+b) + c = a + (b + c), a(bv) = (ab)v
- commutatuivity for add: a+b = b+a
- distributivity: c(u+v) = cu+cv, (a+b)v = av + bv
- zero vector: v + 0 = v
- for all v E -v s.t. s + (-v) = 0
- closed under addition
- closed under scalar multiplication

13


13

#### Ms ####
https://brilliant.org/practice/gaussian-elimination-introduction/?p=6
BAD QUESTION: step 2 can technically be done because eliminating 0 by adding 0 would count, the real problem is that zs are differnt. 


#### TODO ####
